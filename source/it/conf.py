# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))



import os
import sys
import logging

# Nuclear option - suppress ALL duplicate label warnings at the logging level
class DuplicateLabelFilter(logging.Filter):
    def filter(self, record):
        if hasattr(record, 'getMessage'):
            msg = record.getMessage()
            if 'duplicate label' in msg:
                return False
        return True

# Apply to ALL possible loggers that might emit these warnings
for logger_name in ['sphinx', 'myst_parser', 'docutils', 'sphinx.environment.collectors.asset', '']:
    logger = logging.getLogger(logger_name)
    logger.addFilter(DuplicateLabelFilter())

# Apply to root logger as well
logging.getLogger().addFilter(DuplicateLabelFilter())

sys.path.insert(0,
                os.path.abspath(os.path.join(os.path.dirname(__file__),
                                             '..', '..')))



# -- Project information -----------------------------------------------------

project = 'Superhero Data Science'
copyright = '2025, Dario Malchiodi'
author = 'Dario Malchiodi'

# The full version, including alpha/beta/rc tags
release = '1.0'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.


extensions = [ 'myst_parser',
               'sphinx_book_theme', 
            #    'sphinx.ext.mathjax',
               'sphinxcontrib.katex',
               'sphinx_exercise', 'sphinx_tabs.tabs',
               'sphinxcontrib.bibtex',
               'sphinx_external_toc',
               'sphinx_proof',
               'sphinx_exercise',
               'sphinx.ext.autosectionlabel',
               'sds',
               'sds.sphinx_ext_custom_figure',
               'sds.numref_to_ref',
                ]

# nb_code_cell_render_options = {
#     'python3': { 'lexer': 'python' }
# }
# pygments_style = 'friendly'  # or "friendly", "monokai", etc.
# highlight_language = 'python'


bibtex_bibfiles = ['../references.bib']
bibtex_reference_style = 'author_year'

# myst_enable_extensions = [
#     'html_admonition',
#     'html_image',
#     'colon_fence',
#     'amsmath',
#     'dollarmath',
#     'tabs'
# ]

myst_config = {
    "enable_extensions": [
        "amsmath",
        "dollarmath",
        "html_admonition",
        "html_image",
        "colon_fence",
        "tabs",
        "deflist",
        "linkify",
        "replacements",
        "substitution",
        "smartquotes",
        "tasklist",
    ],
    "heading_anchors": 3,
    "number_code_blocks": ["python", "bash", "shell", "javascript", "css", "html", "yaml", "json", "xml", "sql", "r", "julia", "matlab", "rust", "go", "java", "cpp", "c"],
    "title_to_header": True,
}

myst_enable_extensions = ["dollarmath", "amsmath"]


# myst_heading_start_level = 2

root_doc = 'landing'

external_toc_path = '_toc.yml'
external_toc_exclude_missing = False
html_link_suffix = ''

# Enable figure and table numbering within chapters
numfig = True
numfig_format = {
    'figure': 'Figura %s',
    'table': 'Tabella %s', 
    'code-block': 'Algoritmo %s',
    'section': 'Paragrafo %s'
}
numfig_secnum_depth = 1

# Additional numbering and cross-reference settings
numbered_toctree = True
myst_heading_anchors = 3
myst_number_code_blocks = []

# Enable automatic section labels with numbering
autosectionlabel_prefix_document = True
autosectionlabel_maxdepth = None

# Basic settings for cross-references
html_secnumber_suffix = '. '
toc_object_entries_show_parents = 'hide'

# Add any paths that contain templates here, relative to this directory.
templates_path = ['../_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'it'
locale_dirs = ['../locales/'] # Path to your .po/.mo files
gettext_compact = False

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_book_theme'
html_title = 'Superhero Data Science'
html_logo = '../_static/img/logo.png'
html_favicon = '../_static/img/sds.ico'

html_theme_options = {
    'home_page_in_toc': True,
    'show_toc_level': 3,
    'show_navbar_depth': 3,
    # 'number_toc': True,
    'pygments_light_style': 'abap',
    'pygments_dark_style': 'native',
    'article_header_end': [],  # Enable article header area for language switcher
    # "extra_footer": "<p>Footer HTML</p>",
}

html_context = {
    "show_code_label": "Mostra codice",
    "hide_code_label": "Nascondi codice",
    "pyscript_wait_label": "Attendi il caricamento di PyScript",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']
html_css_files = ['custom.css', 'custom_it.css']

html_js_files = [
    'custom.js',
    # 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js',
    # 'https://pyscript.net/releases/2025.5.1/core.js'
    # "https://cdn.jsdelivr.net/npm/vega@5",
    # "https://cdn.jsdelivr.net/npm/vega-lite@5",
    # "https://cdn.jsdelivr.net/npm/vega-embed@6",
]

# mathjax_path = "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"

# # mathjax3_config = {
# #     'options': {
# #        'ignoreHtmlClass': 'no-mathjax',
# #        'processHtmlClass': 'mathjax_process'},
# #     'tex': { 'inlineMath': [['$', '$'], ['\\(', '\\)']] }
# # }

myst_update_mathjax = False  # evita che MyST riscriva la config
# mathjax3_config = {
#   "options": {"ignoreHtmlClass": ".*", "processHtmlClass": "mjx-process"},
#   "tex": {
#     "inlineMath": [['$', '$'], ['\\(', '\\)']],
#     "displayMath": [['$$','$$'], ['\\[','\\]']],
#   },
# }



def setup(app):
    import json
    import os

    # Load URL mapping for language switching
    mapping_path = os.path.join(os.path.dirname(__file__), '..', '_templates', 'url_mapping.json')
    try:
        with open(mapping_path, 'r', encoding='utf-8') as f:
            url_mapping = json.load(f)
        app.config.html_context = getattr(app.config, 'html_context', {})
        app.config.html_context['url_mapping'] = url_mapping
        print(f">>> URL mapping loaded with {len(url_mapping)} entries")
    except Exception as e:
        print(f">>> Warning: Could not load URL mapping: {e}")
        app.config.html_context = getattr(app.config, 'html_context', {})
        app.config.html_context['url_mapping'] = {}

    # Aggiorna le opzioni KaTeX in modo sicuro senza usare add_config_value
    opts_str = getattr(app.config, 'katex_options', '{}')
    try:
        opts_dict = json.loads(opts_str)
    except json.JSONDecodeError:
        opts_dict = {}

    opts_dict.update({
        "throwOnError": False,
        "processHtmlClass": ".*",
        "strict": "ignore"  # utile per ignorare simboli non standard LaTeX
    })

    app.config.katex_options = json.dumps(opts_dict)

    # Carica JS e CSS di KaTeX
    app.add_js_file('https://cdn.jsdelivr.net/npm/katex@0.18.2/dist/katex.min.js')
    app.add_css_file('https://cdn.jsdelivr.net/npm/katex@0.18.2/dist/katex.min.css')
    

    